cmake_minimum_required(VERSION 3.22.1)

project(simple-cpp-jwt VERSION 1.0)

cmake_policy(SET CMP0048 NEW)

option(OPT_ENABLE_COVERAGE "Enable code coverage")
option(SIMPLE_CPP_JWT_WARNINGS_AS_ERRORS "Treat compiler warnings as errors")
add_library(simple-cpp-jwt-compiler-options INTERFACE)
target_compile_features(simple-cpp-jwt-compiler-options INTERFACE cxx_std_20)
if (MSVC)
  target_compile_options(simple-cpp-jwt-compiler-options INTERFACE /W4)
  if (SIMPLE_CPP_JWT_WARNINGS_AS_ERRORS)
    target_compile_options(simple-cpp-jwt-compiler-options INTERFACE /WX)
  endif ()
else ()
  target_compile_options(simple-cpp-jwt-compiler-options INTERFACE -Wall -Wextra -Wpedantic)
  if (SIMPLE_CPP_JWT_WARNINGS_AS_ERRORS)
    target_compile_options(simple-cpp-jwt-compiler-options INTERFACE -Werror)
  endif ()
  if (OPT_ENABLE_COVERAGE)
    if (CMAKE_COMPILER_IS_GNUCXX)
      target_compile_options(simple-cpp-jwt-compiler-options INTERFACE -fprofile-arcs -ftest-coverage)
      target_link_options(simple-cpp-jwt-compiler-options INTERFACE -lgcov --coverage)
    endif ()
  endif ()
endif ()

add_subdirectory(vendor/CLI11)
add_subdirectory(vendor/simple-cpp-base64)

add_executable(simple-jwt-tool main.cpp)
target_link_libraries(simple-jwt-tool CLI11::CLI11 simple-cpp-base64::lib simple-cpp-jwt-compiler-options)
set_target_properties(simple-jwt-tool PROPERTIES OUTPUT_NAME simple-jwt-${CMAKE_PROJECT_VERSION}-${CMAKE_SYSTEM_NAME}-${CMAKE_CXX_COMPILER_ID}-${CMAKE_CXX_COMPILER_VERSION})

enable_testing()
add_test(NAME jwt-decode COMMAND simple-jwt-tool eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c)
set_property(TEST jwt-decode PROPERTY PASS_REGULAR_EXPRESSION ".*1234567890.*John Doe.*")